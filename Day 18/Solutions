======================================================================================================================================
// Challenge Draw Square
//Solution
￼
from turtle import Turtle, Screen
timmy_the_turtule = Turtle()
timmy_the_turtule.shape("turtle")
timmy_the_turtule.color("coral")
timmy_the_turtule.forward(100)
timmy_the_turtule.right(90)
timmy_the_turtule.forward(100)
timmy_the_turtule.right(90)
timmy_the_turtule.forward(100)
timmy_the_turtule.right(90)
timmy_the_turtule.forward(100)

screen = Screen()
screen.exitonclick()

// Or you can use for loop

from turtle import Turtle, Screen
timmy_the_turtule = Turtle()
timmy_the_turtule.shape("turtle")
timmy_the_turtule.color("coral")
for i in range(4):
    timmy_the_turtule.forward(100)
    timmy_the_turtule.right(90)

screen = Screen()
screen.exitonclick()

======================================================================================================================================


// Challenge Draw a Dashed Line
// Solutions
import turtle as t
tim = t.Turtle()

for i in range(15):
    tim.forward(10)
    tim.penup()
    tim.forward(10)
    tim.pendown()

======================================================================================================================================


// Draw a triangle, square, pentagon, hexagon, heptagon, octagon, nonagon, and decagon aligning with each other
￼
Solution
￼
https://trinket.io/docs/colors

import turtle as t
import random


tim = t.Turtle()

colors = ["red", "orange", "green", "blue", "purple", "royal blue", "deep pink", "cyan", "magenta", "lime", "pink", "gold", "silver", "brown"]

def draw_shape(sides):
    angle = 360 / sides
    for _ in range(sides):
        tim.forward(100)
        tim.right(angle)
for shape_sides in range(3, 11):
    tim.color(random.choice(colors))
    draw_shape(shape_sides)

======================================================================================================================================


// Draw random walk same length but random sides

import turtle as t
import random
tim = t.Turtle()
colors = ["red", "orange", "green", "blue", "purple", "royal blue", "deep pink", "cyan", "magenta", "lime", "pink", "gold", "silver", "brown"]
direction = [0,90,180,270]
tim.pensize(10)
tim.speed("fastest")

for i in range(200):
    tim.color(random.choice(colors))
    tim.forward(20)
    tim.setheading(random.choice(direction))

//

import turtle as t
import random


tim = t.Turtle()
t.colormode(255)

def random_color():
    r = random.randint(0, 255)
    g = random.randint(0, 255)
    b = random.randint(0, 255)
    return (r, g, b)

direction = [0,90,180,270]
tim.pensize(10)
tim.speed("fastest")

for i in range(200):
    tim.color(random_color())
    tim.forward(20)
    tim.setheading(random.choice(direction))

======================================================================================================================================


// make a spirograph

import turtle as t
import random


tim = t.Turtle()
t.colormode(255)

def random_color():
    r = random.randint(0, 255)
    g = random.randint(0, 255)
    b = random.randint(0, 255)
    return (r, g, b)

tim.speed("fastest")

def draw_spirograph(size_of_gap):
    for i in range(int(360 / size_of_gap)):
        tim.color(random_color())
        tim.circle(100)
        tim.setheading(tim.heading() + size_of_gap)

draw_spirograph(5)

screen = t.Screen()
screen.exitonclick()

======================================================================================================================================

// The Hirst Painting
￼

import turtle as turtle_module
import random

turtle_module.colormode(255)
tim = turtle_module.Turtle()
tim.penup()
tim.hideturtle()
color_list = [(245, 243, 239), (247, 241, 244), (203, 165, 107), (239, 245, 240), (151, 73, 47), (235, 238, 243), (222, 202, 135), (172, 154, 38), (52, 93, 125), (138, 31, 21), (132, 163, 185), (201, 90, 69), (48, 122, 88), (66, 47, 41), (13, 101, 73), (147, 178, 147), (163, 142, 157), (237, 174, 163), (109, 73, 77), (18, 85, 89), (183, 205, 173), (55, 46, 49), (39, 60, 73), (149, 19, 23), (47, 66, 82), (83, 146, 128), (191, 82, 87), (221, 175, 180), (106, 127, 155), (13, 73, 69)]

tim.setheading(225)
tim.forward(300)
tim.setheading(0)
number_of_dots = 101

for i in range(1, number_of_dots):
    tim.dot(20,random.choice(color_list))
    tim.forward(50)

    if i % 10 == 0:
        tim.setheading(90)
        tim.forward(50)
        tim.setheading(180)
        tim.forward(500)
        tim.setheading(0)


screen = turtle_module.Screen()
screen.exitonclick()



// for extracting colors from image

import colorgram
rgb_colors = []
colors = colorgram.extract('Addictive---detail-of-Dam-007.png',30)
for color in colors:
    r = color.rgb.r
    g = color.rgb.g
    b = color.rgb.b
    new_color = (r, g, b)
    rgb_colors.append(new_color)


======================================================================================================================================



