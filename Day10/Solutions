======================================================================================================================================

'''In the starting code, you'll find the solution from the Leap Year challenge. First, convert this function is_leap() so that instead of printing "Leap year." or "Not leap year." it should return True if it is a leap year and return False if it is not a leap year. '''
'''You are then going to create a function called days_in_month() which will take a year and a month as inputs, e.g.
days_in_month(year=2022, month=2)
And it will use this information to work out the number of days in the month, then return that as the output, e.g.:
28
The List month_days contains the number of days in a month from January to December for a non-leap year. A leap year has 29 days in February.'''

Solution

def is_leap(year):
  if year % 4 == 0:
    if year % 100 == 0:
      if year % 400 == 0:
        return True
      else:
        return False
    else:
      return True
  else:
    return False

def days_in_month(year, month):
  if month > 12 or month < 1:
    return "Invalid month"
  month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
  if is_leap(year) and month == 2:
    return 29
  return month_days[month - 1]

year = int(input("Enter a year: "))
month = int(input("Enter a month: "))
days = days_in_month(year, month)
print(days)

======================================================================================================================================

// Calculator

# add
def add(n1,n2):
    return n1 + n2

# substract
def sub(n1,n2):
    return n1 - n2

# multiplication
def mult(n1,n2):
    return n1 * n2

# Division
def div(n1,n2):
    return n1 / n2

======================================================================================================================================


# Create a dictionary named operations and make program

Solution

def add(n1,n2):
    return n1 + n2

def sub(n1,n2):
    return n1 - n2

def mult(n1,n2):
    return n1 * n2

def div(n1,n2):
    return n1 / n2
operations = {
    "+":add,
    "-":sub,
    "*":mult,
    "/":div
}

num1 = int(input("Enter first number: "))
for symbol in operations:
    print(symbol)
operation_symbols = input("Enter an opration that you want: ")
num2 = int(input("Enter second number: "))
calculation_function = operations[operation_symbols]
answer = calculation_function(num1,num2)

print(f"{num1} {operation_symbols} {num2} = {answer}")



// While loop to make it work forever

Solution

def add(n1,n2):
    return n1 + n2

def sub(n1,n2):
    return n1 - n2

def mult(n1,n2):
    return n1 * n2

def div(n1,n2):
    return n1 / n2
operations = {
    "+":add,
    "-":sub,
    "*":mult,
    "/":div
}

def calculator():
    num1 = floats(input("Enter first number: "))
    for symbol in operations:
        print(symbol)
    should_continue = True
    while should_continue:
        operation_symbols = input("Enter an opration: ")
        num2 = float(input("Enter next number: "))
        calculation_function = operations[operation_symbols]
        answer = calculation_function(num1,num2)

        print(f"{num1} {operation_symbols} {num2} = {answer}")
        if input(f'Enter "y" for continue with {answer} and no to stop and start new calculation: ') == "y":
            num1 = answer
        else:
            should_continue = False
            calculator()
calculator()
======================================================================================================================================
